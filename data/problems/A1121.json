{"code":"","content":"<p><style type=\"text/css\">\n\t<!--\n\t\t@page { margin: 0.79in }\n\t\tP { margin-bottom: 0.08in }\n\t-->\n\t</style></p>\n<p style=\"margin-left: 0.29in; margin-bottom: 0in;\">问题描述</p>\n<p style=\"margin-left: 0.29in; margin-bottom: 0in\">若一个数（首位不为零）从左向右读与从右向左读都一样，我们就将其称之为回文数。</p>\n<p style=\"margin-bottom: 0in\">例如：给定一个<font face=\"宋体, SimSun\">10</font>进制数<font face=\"宋体, SimSun\">56</font>，将<font face=\"宋体, SimSun\">56</font>加<font face=\"宋体, SimSun\">65</font>（即把<font face=\"宋体, SimSun\">56</font>从右向左读），得到<font face=\"宋体, SimSun\">121</font>是一个回文数。</p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\">又如：对于<font face=\"宋体, SimSun\">10</font>进制数<font face=\"宋体, SimSun\">87</font>：</p>\n<p style=\"margin-bottom: 0in\"><font face=\"宋体, SimSun\">STEP1</font>：<font face=\"宋体, SimSun\">87+78  = 165                  STEP2</font>：<font face=\"宋体, SimSun\">165+561 = 726</font></p>\n<p style=\"margin-bottom: 0in\"><font face=\"宋体, SimSun\">STEP3</font>：<font face=\"宋体, SimSun\">726+627 = 1353                STEP4</font>：<font face=\"宋体, SimSun\">1353+3531 = 4884</font></p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\">在这里的一步是指进行了一次<font face=\"宋体, SimSun\">N</font>进制的加法，上例最少用了<font face=\"宋体, SimSun\">4</font>步得到回文数<font face=\"宋体, SimSun\">4884</font>。</p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\">写一个程序，给定一个<font face=\"DejaVu Serif, serif\"><font face=\"宋体, SimSun\">N</font></font>（<font face=\"DejaVu Serif, serif\"><font face=\"宋体, SimSun\">2&lt;=N&lt;=10</font></font>或<font face=\"DejaVu Serif, serif\"><font face=\"宋体, SimSun\">N=16</font></font>）进制数<font face=\"DejaVu Serif, serif\"><font face=\"宋体, SimSun\">M（其中16进制数字为0-9与A-F）</font></font>，求最少经过几步可以得到回文数。</p>\n<p style=\"margin-bottom: 0in;\">如果在<font face=\"宋体, SimSun\">30</font>步以内（包含<font face=\"宋体, SimSun\">30</font>步）不可能得到回文数，则输出&ldquo;Impossible!&rdquo;</p>\n<p style=\"margin-bottom: 0in;\">输入格式</p>\n<p style=\"margin-bottom: 0in;\">两行，N与M</p>\n<p style=\"margin-bottom: 0in;\">输出格式</p>\n<p style=\"margin-bottom: 0in\">如果能在30步以内得到回文数，输出&ldquo;STEP=xx&rdquo;（不含引号），其中xx是步数；否则输出一行&rdquo;Impossible!&rdquo;（不含引号）</p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\">样例输入</p>\n<p style=\"margin-bottom: 0in;\"><font face=\"宋体, SimSun\">9</font></p>\n<p style=\"margin-bottom: 0in;\"><font face=\"宋体, SimSun\">87</font></p>\n<p style=\"margin-bottom: 0in;\"><font face=\"宋体, SimSun\">样例输出</font><font face=\"宋体, SimSun\"><br />\n</font></p>\n<p style=\"margin-bottom: 0in;\"><font face=\"宋体, SimSun\">STEP=6</font></p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　若一个数（首位不为零）从左向右读与从右向左读都一样，我们就将其称之为回文数。<br />\n　　例如：给定一个10进制数56，将56加65（即把56从右向左读），得到121是一个回文数。<br />\n<br />\n　　又如：对于10进制数87：<br />\n　　STEP1：87+78  = 165                  STEP2：165+561 = 726<br />\n　　STEP3：726+627 = 1353                STEP4：1353+3531 = 4884<br />\n<br />\n　　在这里的一步是指进行了一次N进制的加法，上例最少用了4步得到回文数4884。<br />\n<br />\n　　写一个程序，给定一个N（2&lt;=N&lt;=10或N=16）进制数M（其中16进制数字为0-9与A-F），求最少经过几步可以得到回文数。<br />\n　　如果在30步以内（包含30步）不可能得到回文数，则输出“Impossible!”</div><div class='pdsec'>输入格式</div><div class='pdcont'>　　两行，N与M</div><div class='pdsec'>输出格式</div><div class='pdcont'>　　如果能在30步以内得到回文数，输出“STEP=xx”（不含引号），其中xx是步数；否则输出一行”Impossible!”（不含引号）</div><div class='pdsec'>样例输入</div><div class='pddata'>9<br />\n87</div><div class='pdsec'>样例输出</div><div class='pddata'>STEP=6</div>\n","files":"","gpid":"A1121","indatacount":0,"inputfile":"","langs":"CPP,C0X,VC9,C,JAVA,PAS,PYTHON","memorylimit":"256.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"NOIP1999 提高组","subinter":0,"timelimit":"1.0s","title":"回文数","type":"DEFAULT"}