{"code":"","content":"<p class=\"subtitle\">问题描述</p>\n<p class=\"probcontent\">给出一个n阶行列式A，计算它的值。（3&lt;=n&lt;=5）<br />\n要计算n阶行列式的值，可以按下面的方法：<br />\n1. 设s=0。<br />\n2. 枚举所有1至n个数的排列（参照01序列、枚举字串等题），对于它的每一个排列P(1)..P(n)，求它的逆序对个数（见逆序对个数一题）t，然后将所有的A[i,P(i)]相乘得到乘积M，如果逆序对个数为偶数，则将s加上M，否则将s减去M。<br />\n例如，要计算下面行列式的值：<br />\n1 2 3<br />\n3 2 1<br />\n5 1 3<br />\n则枚举所有的排列，当n=3时共有6个排列，它们是：<br />\n1 2 3<br />\n1 3 2<br />\n2 1 3<br />\n2 3 1<br />\n3 1 2<br />\n3 2 1<br />\n对于每一个排列，可以计算一个乘积M和逆序对的个数t：<br />\n1 2 3: M=A[1,1]*A[2,2]*A[3,3]=1*2*3=6, t=0<br />\n1 3 2: M=A[1,1]*A[2,3]*A[3,2]=1*1*1=1, t=1<br />\n2 1 3: M=A[1,2]*A[2,1]*A[3,3]=2*3*3=18, t=1<br />\n2 3 1: M=A[1,2]*A[2,3]*A[3,1]=2*1*5=10, t=2<br />\n3 1 2: M=A[1,3]*A[2,1]*A[3,2]=3*3*1=9, t=2<br />\n3 2 1: M=A[1,3]*A[2,2]*A[3,1]=3*2*5=30, t=3<br />\n所以结果为：s=6-1-18+10+9-30=-24<br />\n以我们现在的知识，要枚举1至n的排列比较困难，我们可以把行列式扩展一下，在右下角加入一个单位矩阵，使之变为一个5阶的矩阵，上面的矩阵变为：<br />\n1 2 3 0 0<br />\n3 2 1 0 0<br />\n5 1 3 0 0<br />\n0 0 0 1 0<br />\n0 0 0 0 1<br />\n这样变化的好处是小于5阶的矩阵变为了5阶的矩阵，而且行列式的值不变，我们只需要能枚举1至5的排列就可以解决问题了。 <br />\n&nbsp;</p>\n<p class=\"subtitle\">提示</p>\n<p class=\"probcontent\">所谓1至n的排列，是指由1至n这n个数组成的一个序列P(1)..P(n)，在这个序列中，1至n中的每一个整数出现且仅出现一次，要生成5个数的排列，可以按照&ldquo;枚举字串&rdquo;的方法先生成5个数的序列，然后判断是不是每个数都只出现了一次（即没有重复出现的数字）。<br />\n你可以将以前自己写过的代码拿来进行拼凑后作为本题的代码。按照开卷考试的要求，你可以参考或引用你自己带到考场的资料，包括以前在评测系统上做的题。 <br />\n&nbsp;</p>\n<p class=\"subtitle\">输入格式</p>\n<p class=\"probcontent\">第一行只有一个整数n，为行列式的阶数，第2行到第n+1行，每行n个整数，为需要计算的n阶行列式。 <br />\n&nbsp;</p>\n<p class=\"subtitle\">输出格式</p>\n<p class=\"probcontent\">仅输出一个整数，为行列式的值。 <br />\n&nbsp;</p>\n<p class=\"subtitle\">样例输入1</p>\n<p class=\"probcontent\">3<br />\n1 2 3<br />\n2 3 1<br />\n3 1 2 <br />\n&nbsp;</p>\n<p class=\"subtitle\">样例输出1</p>\n<p class=\"probcontent\">-18 <br />\n&nbsp;</p>\n<p class=\"subtitle\">样例输入2</p>\n<p class=\"probcontent\">3<br />\n1 2 3<br />\n3 2 1<br />\n5 1 3 <br />\n&nbsp;</p>\n<p class=\"subtitle\">样例输出2</p>\n<p class=\"probcontent\">-24 <br />\n&nbsp;</p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　给出一个n阶行列式A，计算它的值。（3&lt;=n&lt;=5）<br />\n　　要计算n阶行列式的值，可以按下面的方法：<br />\n　　1. 设s=0。<br />\n　　2. 枚举所有1至n个数的排列（参照01序列、枚举字串等题），对于它的每一个排列P(1)..P(n)，求它的逆序对个数（见逆序对个数一题）t，然后将所有的A[i,P(i)]相乘得到乘积M，如果逆序对个数为偶数，则将s加上M，否则将s减去M。<br />\n　　例如，要计算下面行列式的值：<br />\n　　1 2 3<br />\n　　3 2 1<br />\n　　5 1 3<br />\n　　则枚举所有的排列，当n=3时共有6个排列，它们是：<br />\n　　1 2 3<br />\n　　1 3 2<br />\n　　2 1 3<br />\n　　2 3 1<br />\n　　3 1 2<br />\n　　3 2 1<br />\n　　对于每一个排列，可以计算一个乘积M和逆序对的个数t：<br />\n　　1 2 3: M=A[1,1]*A[2,2]*A[3,3]=1*2*3=6, t=0<br />\n　　1 3 2: M=A[1,1]*A[2,3]*A[3,2]=1*1*1=1, t=1<br />\n　　2 1 3: M=A[1,2]*A[2,1]*A[3,3]=2*3*3=18, t=1<br />\n　　2 3 1: M=A[1,2]*A[2,3]*A[3,1]=2*1*5=10, t=2<br />\n　　3 1 2: M=A[1,3]*A[2,1]*A[3,2]=3*3*1=9, t=2<br />\n　　3 2 1: M=A[1,3]*A[2,2]*A[3,1]=3*2*5=30, t=3<br />\n　　所以结果为：s=6-1-18+10+9-30=-24<br />\n　　以我们现在的知识，要枚举1至n的排列比较困难，我们可以把行列式扩展一下，在右下角加入一个单位矩阵，使之变为一个5阶的矩阵，上面的矩阵变为：<br />\n　　1 2 3 0 0<br />\n　　3 2 1 0 0<br />\n　　5 1 3 0 0<br />\n　　0 0 0 1 0<br />\n　　0 0 0 0 1<br />\n　　这样变化的好处是小于5阶的矩阵变为了5阶的矩阵，而且行列式的值不变，我们只需要能枚举1至5的排列就可以解决问题了。</div><div class='pdsec'>提示</div><div class='pdcont'>　　所谓1至n的排列，是指由1至n这n个数组成的一个序列P(1)..P(n)，在这个序列中，1至n中的每一个整数出现且仅出现一次，要生成5个数的排列，可以按照“枚举字串”的方法先生成5个数的序列，然后判断是不是每个数都只出现了一次（即没有重复出现的数字）。<br />\n　　你可以将以前自己写过的代码拿来进行拼凑后作为本题的代码。按照开卷考试的要求，你可以参考或引用你自己带到考场的资料，包括以前在评测系统上做的题。</div><div class='pdsec'>输入格式</div><div class='pdcont'>　　第一行只有一个整数n，为行列式的阶数，第2行到第n+1行，每行n个整数，为需要计算的n阶行列式。</div><div class='pdsec'>输出格式</div><div class='pdcont'>　　仅输出一个整数，为行列式的值。</div><div class='pdsec'>样例输入</div><div class='pddata'>3<br />\n1 2 3<br />\n2 3 1<br />\n3 1 2</div><div class='pdsec'>样例输出</div><div class='pddata'>-18</div><div class='pdsec'>样例输入</div><div class='pddata'>3<br />\n1 2 3<br />\n3 2 1<br />\n5 1 3</div><div class='pdsec'>样例输出</div><div class='pddata'>-24</div>\n","files":"","gpid":"A1079","indatacount":0,"inputfile":"","langs":"CPP,C0X,VC9,C,JAVA,PAS,PYTHON","memorylimit":"512.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"行列式计算","type":"DEFAULT"}