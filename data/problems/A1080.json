{"code":"#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\n// 计算F(n)和F(n+1)除m的余数，分别放入fn和fn1中。\nvoid calcF(int n, int m, int &fn, int &fn1)\n{\n@你的代码\n}\n","content":"<p class=\"subtitle\">问题描述</p>\n<p class=\"probcontent\">\nFibonacci数是组合数学中非常重要的一个数列，它的递推公式是：<br />\nF(1)=F(2)=1<br />\nF(n)=F(n-1)+F(n-2)<br />\n当然，用这个公式来计算F(n)是非常慢的，当计算F(n)时需要从F(1)一直计算到F(n)。Fibonacci数列还满足一些其他的公式，如：<br />\nF(a+b+1)=F(a+1)*F(b+1)+F(a)*F(b)<br />\n利用这个公式，可以加速Fibonacci数的计算。我们考虑同时计算F(2n+1)和F(2n)，则按照上面的公式：<br />\nF(2n+1)=F(n+1)*F(n+1)+F(n)*F(n)<br />\nF(2n)=F(n+1)*F(n)+F(n)*F(n-1)=F(n+1)*F(n)+F(n)*(F(n+1)-F(n))<br />\n这样，F(2n+1)和F(2n)的计算变为了F(n+1)和F(n)的计算，即下标变为了原来的一半。重复利用这种方法，可以每次让下标变为原来的一半，总共需要大约log n次计算(以2为底)。<br />\n当n较大时，后面的方法就比直接的递推要快得多，比如当n=1000000时，后面的方法大概需要20次计算，而直接递推的方法大概需要1000000次计算，现在请你用这种方法计算F(n)和F(n+1)。<br />\n由于答案非常大，你只需要计算F(n)和F(n+1)除m的余数即可。<br />\n注意，上述公式在除m的余数下仍是满足的，即令g(n)是F(n)除m的余数，则<br />\ng(2n+1)=(g(n+1)*g(n+1)+g(n)*g(n))%m<br />\ng(2n)=(g(n+1)*g(n)+g(n)*(g(n+1)-g(n)+m))%m<br />\n在g(2n)的公式中多了一个+m，是为了在运算中不出现负数。<br />\n参数保证n为正整数，m不大于10000。\n<br /><br /></p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　Fibonacci数是组合数学中非常重要的一个数列，它的递推公式是：<br />\n　　F(1)=F(2)=1<br />\n　　F(n)=F(n-1)+F(n-2)<br />\n　　当然，用这个公式来计算F(n)是非常慢的，当计算F(n)时需要从F(1)一直计算到F(n)。Fibonacci数列还满足一些其他的公式，如：<br />\n　　F(a+b+1)=F(a+1)*F(b+1)+F(a)*F(b)<br />\n　　利用这个公式，可以加速Fibonacci数的计算。我们考虑同时计算F(2n+1)和F(2n)，则按照上面的公式：<br />\n　　F(2n+1)=F(n+1)*F(n+1)+F(n)*F(n)<br />\n　　F(2n)=F(n+1)*F(n)+F(n)*F(n-1)=F(n+1)*F(n)+F(n)*(F(n+1)-F(n))<br />\n　　这样，F(2n+1)和F(2n)的计算变为了F(n+1)和F(n)的计算，即下标变为了原来的一半。重复利用这种方法，可以每次让下标变为原来的一半，总共需要大约log n次计算(以2为底)。<br />\n　　当n较大时，后面的方法就比直接的递推要快得多，比如当n=1000000时，后面的方法大概需要20次计算，而直接递推的方法大概需要1000000次计算，现在请你用这种方法计算F(n)和F(n+1)。<br />\n　　由于答案非常大，你只需要计算F(n)和F(n+1)除m的余数即可。<br />\n　　注意，上述公式在除m的余数下仍是满足的，即令g(n)是F(n)除m的余数，则<br />\n　　g(2n+1)=(g(n+1)*g(n+1)+g(n)*g(n))%m<br />\n　　g(2n)=(g(n+1)*g(n)+g(n)*(g(n+1)-g(n)+m))%m<br />\n　　在g(2n)的公式中多了一个+m，是为了在运算中不出现负数。<br />\n　　参数保证n为正整数，m不大于10000。</div>\n","files":"","gpid":"A1080","indatacount":0,"inputfile":"","langs":"CPP,C0X,VC9,C,JAVA,PAS,PYTHON","memorylimit":"512.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"Fibonacci","type":"DEFAULT"}