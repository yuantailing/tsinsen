{"code":"#include <iostream> \n#include <cassert> \nusing namespace std;\n \nclass zrf_Ratio\n{\n     friend std::ostream& operator<<(std::ostream&, const zrf_Ratio&);\n     friend std::istream& operator>>(std::istream&, zrf_Ratio&);\npublic:\n     zrf_Ratio(int=0,int=1);\n     zrf_Ratio(const zrf_Ratio&);\n     zrf_Ratio& operator=(const zrf_Ratio&);\n     zrf_Ratio& operator*=(const zrf_Ratio&);\n     zrf_Ratio operator++();    \n     zrf_Ratio operator++(int); \n     int& operator[](int);\n \nprivate:\n     int num;\n     int den;\n     void reduce();\n};\n \n@你的代码\n \n \n//公有成员函数:\nzrf_Ratio::zrf_Ratio(int num, int den) : num(num), den(den){ reduce();}\n \nzrf_Ratio::zrf_Ratio(const zrf_Ratio& r) : num(r.num), den(r.den){ }\n \n \n//私有成员函数:\nvoid swap(int &m, int &n)\n{   \n     int t;  \n     t=m;    \n     m=n;    \n     n=t;\n}\n \nint zrf_Gcd(int m, int n)\n{\n     if (m<n)\n         swap(m,n);\n     assert(n>=0);\n \n     while (n>0)\n     {\n         int r=m%n;\n         m = n;  \n         n = r;\n     }\n     return m;\n}\n \nvoid zrf_Ratio::reduce()\n{\n     if (num == 0 || den == 0)\n     {\n         num = 0;\n         den = 1; \n         return;\n     }\n     if (den < 0)\n     {\n         den *= -1;\n         num *= -1;\n     }\n     if (num == 1)\n         return;\n     int sgn = (num<0?-1:1);\n     int g = zrf_Gcd(sgn*num,den);\n     num /= g;\n     den /= g;\n}\n \nint main()\n{\n     int a = 0, b = 0, c = 0, d = 0;\n     cin >> a >> b >> c >> d;\n     zrf_Ratio zrf(a,b),ssh(c,d),zl;\n     zl=zrf;\n     std::cout<<\"zrf is:\"<<zrf<<\"; ssh is:\"<<ssh<<'\\n' ;\n     std::cout<<\"zl is:\"<<zl << endl;\n     std::cout<<\"After zrf*=ssh, zrf is:\"<<zrf <<endl;\n     std::cout<<\"After zrf++ is:\"<<zrf++ <<endl;\n     std::cout<<\"After ++zrf is:\"<<++zrf <<endl;\n     std::cout<<\"zrf[1] is:\"<<zrf[1]<<\"; zrf[2] is:\"<<zrf[2] <<endl;\n     return 0;\n}","content":"<p style=\"margin: 6pt 0cm 3pt\" class=\"a0\">【问题描述】</p>\n<p style=\"margin: 6pt 0cm 3pt\" class=\"a0\"><font size=\"3\"><font face=\"宋体\"><span style=\"mso-bidi-font-family: Arial\">已知一个有理数类<span lang=\"EN-US\">Zrf_Ratio</span>，实现如下的操作符重载形式：</span><span style=\"font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 6pt\" lang=\"EN-US\"><o:p></o:p></span></font></font></p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\"><span style=\"mso-spacerun: yes\">&nbsp;&nbsp;&nbsp; </span>zrf_Ratio&amp; operator=(const zrf_Ratio&amp;);<o:p></o:p></span></p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\"><span style=\"mso-spacerun: yes\">&nbsp;&nbsp;&nbsp; </span>zrf_Ratio&amp; operator*=(const zrf_Ratio&amp;);<o:p></o:p></span></p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\"><span style=\"mso-spacerun: yes\">&nbsp;&nbsp;&nbsp; </span>zrf_Ratio operator++();<span style=\"mso-spacerun: yes\">&nbsp;&nbsp;&nbsp;&nbsp; </span><o:p></o:p></span></p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\"><span style=\"mso-spacerun: yes\">&nbsp;&nbsp;&nbsp; </span>zrf_Ratio operator++(int);<span style=\"mso-spacerun: yes\">&nbsp; </span><o:p></o:p></span></p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\"><span style=\"mso-spacerun: yes\">&nbsp;&nbsp;&nbsp; </span>int&amp; operator[](int);<o:p></o:p></span></p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\">&nbsp;</p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-layout-grid-align: none\" class=\"MsoNormal\" align=\"left\">&nbsp;</p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: &quot;Arial&quot;,&quot;sans-serif&quot;; font-size: 6pt; mso-font-kerning: 0pt; mso-fareast-font-family: 宋体\" lang=\"EN-US\">&nbsp;<o:p></o:p></span>【测试】</p>\n<p style=\"text-align: left; margin: 0cm 0cm 0pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\">输入为<span lang=\"EN-US\">4</span>个整数，输出见<span lang=\"EN-US\">main</span>函数。 <span lang=\"EN-US\"><o:p></o:p></span></span></p>\n<p style=\"text-align: left; margin: 6pt 0cm 3pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan; mso-para-margin-top: 6.0pt; mso-para-margin-right: 0cm; mso-para-margin-bottom: 3.0pt\" class=\"MsoNormal\" align=\"left\">【输入样例】</p>\n<p style=\"text-align: left; margin: 6pt 0cm 3pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan; mso-para-margin-top: 6.0pt; mso-para-margin-right: 0cm; mso-para-margin-bottom: 3.0pt\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\">1 7&nbsp;26 65<o:p></o:p></span></p>\n<p style=\"text-align: left; margin: 6pt 0cm 3pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan; mso-para-margin-top: 6.0pt; mso-para-margin-right: 0cm; mso-para-margin-bottom: 3.0pt\" class=\"MsoNormal\" align=\"left\">【输出样例】</p>\n<p style=\"text-align: left; margin: 6pt 0cm 3pt; mso-para-margin-left: 0gd; mso-pagination: widow-orphan; mso-para-margin-top: 6.0pt; mso-para-margin-right: 0cm; mso-para-margin-bottom: 3.0pt\" class=\"MsoNormal\" align=\"left\"><span style=\"font-family: 宋体; font-size: 12pt; mso-font-kerning: 0pt; mso-bidi-font-family: Arial\" lang=\"EN-US\">zrf is:1/7; ssh is:2/5<br>\nzl is:1/7<br>\nAfter zrf*=ssh, zrf is:1/7<br>\nAfter zrf++ is:1/7<br>\nAfter ++zrf is:15/7<br>\nzrf[1] is:15; zrf[2] is:7&nbsp;<o:p></o:p></span></p>\n<p>&nbsp;</p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　已知一个有理数类Zrf_Ratio，实现如下的操作符重载形式：<br />\n　　zrf_Ratio&amp; operator=(const zrf_Ratio&amp;);<br />\n　　zrf_Ratio&amp; operator*=(const zrf_Ratio&amp;);<br />\n　　zrf_Ratio operator++();<br />\n　　zrf_Ratio operator++(int);<br />\n　　int&amp; operator[](int);</div><div class='pdsec'>测试</div><div class='pdcont'>　　输入为4个整数，输出见main函数。</div><div class='pdsec'>样例输入</div><div class='pddata'>1 7 26 65</div><div class='pdsec'>样例输出</div><div class='pddata'>zrf is:1/7; ssh is:2/5<br />\nzl is:1/7<br />\nAfter zrf*=ssh, zrf is:1/7<br />\nAfter zrf++ is:1/7<br />\nAfter ++zrf is:15/7<br />\nzrf[1] is:15; zrf[2] is:7</div>\n","files":"","gpid":"D5683","indatacount":0,"inputfile":"","langs":"CPP","memorylimit":"512.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"c++_ch08_03","type":"DEFAULT"}