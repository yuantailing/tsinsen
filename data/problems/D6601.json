{"code":"#include<iostream>\n\nusing namespace std;\n\nstruct node{\n    struct node* next;\n    int number;\n};\n\ntypedef struct node node_t;\n\n//输入num个整数,生成链表head\nvoid get_list(node_t* &head, const int num)\n{\n    node_t* temp_node;\n    node_t* last;\n    int temp_num;\n    int i;\n    for(i=0; i<num; i++){\n\t\tcin >> temp_num;\n\t\ttemp_node = new node_t;\n\t\ttemp_node->next = NULL;\n\t\ttemp_node->number = temp_num;\n\t\tif(i == 0){\n\t\t\thead = temp_node;\n\t\t}\n\t\telse{\n\t\t\tlast->next = temp_node;\n\t\t}\n\t\tlast = temp_node;\n    }\n    return;\n}\n\n//将两个整数链表list_a,list_b合并为一个list_res,并删除重复元素\n//注意这里的结果链表的结点复用原有的结点,重复结点的空间需要释放掉\nvoid merge_list(node_t* &list_a, node_t* &list_b, node_t* &list_res)\n{\n@你的代码\n}\n\n//删除一个链表,并释放其空间\nvoid delete_list(node_t* &list)\n{\n    node_t* current_node;\n    node_t* next_node;\n    \n    current_node = list;\n\t\n    while(NULL != current_node){\n\t\tnext_node = current_node->next;\n\t\tdelete current_node;\n\t\tcurrent_node = next_node;\n    }\n    return;\n}\n\n//打印一个链表里的元素\nvoid print_list(node_t* &list)\n{\n\tnode_t* temp_node;\n\ttemp_node = list;\n    while(temp_node != NULL){\n\t\tcout << temp_node->number << \" \";\n\t\ttemp_node = temp_node->next;\n    }\n    cout << endl;\n}\n\nint main()\n{\n    int N,M;\n\t\n    node_t *list_a = NULL;\n    node_t *list_b = NULL;\n    node_t *list_res = NULL;\n    \n    cin >> M >> N;\n\t\n\t//输入M个从小到大排好序的且没有重复元素的整数,生成链表list_a\n    get_list(list_a, M);\n\t//输入N个从小到大排好序的且没有重复元素的整数,生成链表list_b\n    get_list(list_b, N);\n\t\t\n    //合并两个链表,生成list_res,从小到大排列,且没有重复元素\n    merge_list(list_a, list_b, list_res);\n\t\n    // 打印链表\n\tprint_list(list_res);\n    \n\t//释放申请的空间\n    delete_list(list_res);\n\t\n    return 0;\n}\n","content":"<p><b><span style=\"font-size: medium\">[题目描述]</span></b><span style=\"font-size: medium\"><br />\n&nbsp;&nbsp;&nbsp; 将两个已按从小到大排序且没有重复元素的整数数组，合并成一个从小到大排序且没有重复元素的数组。</span></p>\n<p><span style=\"font-size: medium\"><br />\n<b>[输入]</b><br />\n&nbsp;&nbsp;&nbsp; 第一行有两个整数M,N分别表示两个数组的大小,它们都不超过1000<br />\n&nbsp;&nbsp;&nbsp; 后面两行分别为两个整数数组,即分别有M,N个整数.</span></p>\n<p><span style=\"font-size: medium\"><br />\n<b>[输出]</b><br />\n&nbsp;&nbsp;&nbsp; 在一行内打印出合并之后的数组,数字之间空格隔开.</span></p>\n<p><span style=\"font-size: medium\"><br />\n<b>[样例输入]</b><br />\n4 4<br />\n1 3 5 7<br />\n2 4 5 8<br />\n<b>[样例输出]</b><br />\n1 2 3 4 5 7 8</span><br />\n&nbsp;</p>","fcontent":"<div class='pdcont'><b>[题目描述]</b><br />\n　　将两个已按从小到大排序且没有重复元素的整数数组，合并成一个从小到大排序且没有重复元素的数组。<br />\n<br />\n<b>[输入]</b><br />\n　　第一行有两个整数M,N分别表示两个数组的大小,它们都不超过1000<br />\n　　后面两行分别为两个整数数组,即分别有M,N个整数.<br />\n<br />\n<b>[输出]</b><br />\n　　在一行内打印出合并之后的数组,数字之间空格隔开.<br />\n<br />\n<b>[样例输入]</b><br />\n　　4 4<br />\n　　1 3 5 7<br />\n　　2 4 5 8<br />\n<b>[样例输出]</b><br />\n　　1 2 3 4 5 7 8</div>\n","files":"","gpid":"D6601","indatacount":0,"inputfile":"","langs":"CPP,C","memorylimit":"512.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"数组合并","type":"DEFAULT"}