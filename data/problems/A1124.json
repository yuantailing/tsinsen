{"code":"","content":"<p><style type=\"text/css\">\n\t<!--\n\t\t@page { margin: 0.79in }\n\t\tP { margin-bottom: 0.08in }\n\t-->\n\t</style></p>\n<p style=\"margin-bottom: 0in\"><b>问题描述</b><font face=\"Times New Roman, serif\"><b>   </b></font></p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\">我们可以用这样的方式来表示一个十进制数：<font face=\"Times New Roman, serif\"> </font>将每个阿拉伯数字乘以一个以该数字所处位置的（值减１）为指数，以１０为底数的幂之和的形式。例如：１２３可表示为<font face=\"Times New Roman, serif\"> </font>１＊１０<sup>２</sup>＋２＊１０<sup>１</sup>＋３＊１０<sup>０</sup>这样的形式。</p>\n<p style=\"margin-bottom: 0in\">与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置的（值－１）为指数，以２为底数的幂之和的形式。一般说来，任何一个正整数Ｒ或一个负整数－Ｒ都可以被选来作为一个数制系统的基数。如果是以Ｒ或－Ｒ为基数，则需要用到的数码为<font face=\"Times New Roman, serif\"> </font>０，１，．．．．Ｒ－１。例如，当Ｒ＝７时，所需用到的数码是０，１，２，３，４，５和６，这与其是Ｒ或－Ｒ无关。如果作为基数的数绝对值超过１０，则为了表示这些数码，通常使用英文字母来表示那些大于９的数码。例如对１６进制数来说，用Ａ表示１０，用Ｂ表示１１，用Ｃ表示１２，用Ｄ表示１３，用Ｅ表示１４，用Ｆ表示１５。</p>\n<p style=\"margin-bottom: 0in\">在负进制数中是用－Ｒ<font face=\"Times New Roman, serif\"> </font>作为基数，例如－１５（十进制）相当于１１０００１（－２进制），并且它可以被表示为２的幂级数的和数：</p>\n<p style=\"margin-bottom: 0in\">１１０００１＝１＊（－２）<sup>５</sup>＋１＊（－２）<sup>４</sup>＋０＊（－２）<sup>３</sup>＋０＊（－２）<sup>２</sup>＋<font face=\"Times New Roman, serif\">  </font></p>\n<p style=\"margin-bottom: 0in\">０＊（－２）<sup>１</sup><font face=\"Times New Roman, serif\"> </font>＋１＊（－２）<sup>０</sup></p>\n<p style=\"margin-bottom: 0in\"><sup>  </sup>  设计一个程序，读入一个十进制数和一个负进制数的基数<font face=\"DejaVu Serif, serif\">, </font>并将此十进制数转换为此负进制下的数：<font face=\"Times New Roman, serif\">     </font>－Ｒ&isin;｛－２，－３，－４，．．．，－２０｝　</p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\"><b>输</b><b>入格式</b><font face=\"Times New Roman, serif\"><b>   </b></font></p>\n<p style=\"margin-bottom: 0in\">一行两个数，第一个是十进制数Ｎ（－<font face=\"DejaVu Serif, serif\">32768</font>＜＝Ｎ＜＝<font face=\"DejaVu Serif, serif\">32767</font>），<font face=\"Times New Roman, serif\">  </font>第二个是负进制数的基数－Ｒ。</p>\n<p style=\"margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in\"><b>输</b><span style=\"font-weight: bold;\">出格式</span><font face=\"Times New Roman, serif\"><b>   </b></font></p>\n<p style=\"text-indent: 0.29in; margin-bottom: 0in\">输出所求负进制数及其基数，若此基数超过１０，则参照１６进制的方式处理。（格式参照样例）</p>\n<p style=\"text-indent: 0.29in; margin-bottom: 0in\">&nbsp;</p>\n<p style=\"margin-bottom: 0in;\"><b>样</b><b>例</b>输入1</p>\n<p style=\"margin-bottom: 0in;\">30000 -2</p>\n<p style=\"margin-bottom: 0in;\">样例输出1</p>\n<p style=\"margin-bottom: 0in;\">30000=11011010101110000(base-2)</p>\n<p style=\"margin-bottom: 0in;\">样例输入2</p>\n<p style=\"margin-bottom: 0in;\">-20000 -2</p>\n<p style=\"margin-bottom: 0in;\">样例输出2</p>\n<p style=\"margin-bottom: 0in;\">-20000=1111011000100000(base-2)</p>\n<p style=\"margin-bottom: 0in;\">样例输入3</p>\n<p style=\"margin-bottom: 0in;\">28800 -16</p>\n<p style=\"margin-bottom: 0in;\">样例输出3</p>\n<p style=\"margin-bottom: 0in;\">28800=19180(base-16)</p>\n<p style=\"margin-bottom: 0in;\">样例输入4</p>\n<p style=\"margin-bottom: 0in;\">-25000 -16</p>\n<p style=\"margin-bottom: 0in;\">样例输出4</p>\n<p style=\"margin-bottom: 0in;\">-25000=7FB8(base-16)</p>","fcontent":"<div class='pdcont'><b>问题描述</b><b>   </b><br />\n<br />\n　　我们可以用这样的方式来表示一个十进制数： 将每个阿拉伯数字乘以一个以该数字所处位置的（值减１）为指数，以１０为底数的幂之和的形式。例如：１２３可表示为 １＊１０<sup>２</sup>＋２＊１０<sup>１</sup>＋３＊１０<sup>０</sup>这样的形式。<br />\n　　与之相似的，对二进制数来说，也可表示成每个二进制数码乘以一个以该数字所处位置的（值－１）为指数，以２为底数的幂之和的形式。一般说来，任何一个正整数Ｒ或一个负整数－Ｒ都可以被选来作为一个数制系统的基数。如果是以Ｒ或－Ｒ为基数，则需要用到的数码为 ０，１，．．．．Ｒ－１。例如，当Ｒ＝７时，所需用到的数码是０，１，２，３，４，５和６，这与其是Ｒ或－Ｒ无关。如果作为基数的数绝对值超过１０，则为了表示这些数码，通常使用英文字母来表示那些大于９的数码。例如对１６进制数来说，用Ａ表示１０，用Ｂ表示１１，用Ｃ表示１２，用Ｄ表示１３，用Ｅ表示１４，用Ｆ表示１５。<br />\n　　在负进制数中是用－Ｒ 作为基数，例如－１５（十进制）相当于１１０００１（－２进制），并且它可以被表示为２的幂级数的和数：<br />\n　　１１０００１＝１＊（－２）<sup>５</sup>＋１＊（－２）<sup>４</sup>＋０＊（－２）<sup>３</sup>＋０＊（－２）<sup>２</sup>＋<br />\n　　０＊（－２）<sup>１</sup> ＋１＊（－２）<sup>０</sup><br />\n　　<sup>  </sup>  设计一个程序，读入一个十进制数和一个负进制数的基数, 并将此十进制数转换为此负进制下的数：     －Ｒ∈｛－２，－３，－４，．．．，－２０｝<br />\n<br />\n<b>输</b><b>入格式</b><b>   </b><br />\n　　一行两个数，第一个是十进制数Ｎ（－32768＜＝Ｎ＜＝32767），  第二个是负进制数的基数－Ｒ。<br />\n<br />\n<b>输</b>出格式<b>   </b><br />\n　　输出所求负进制数及其基数，若此基数超过１０，则参照１６进制的方式处理。（格式参照样例）<br />\n<br />\n　　<b>样</b><b>例</b>输入1<br />\n　　30000 -2</div><div class='pdsec'>样例输出</div><div class='pddata'>30000=11011010101110000(base-2)</div><div class='pdsec'>样例输入</div><div class='pddata'>-20000 -2</div><div class='pdsec'>样例输出</div><div class='pddata'>-20000=1111011000100000(base-2)</div><div class='pdsec'>样例输入</div><div class='pddata'>28800 -16</div><div class='pdsec'>样例输出</div><div class='pddata'>28800=19180(base-16)</div><div class='pdsec'>样例输入</div><div class='pddata'>-25000 -16</div><div class='pdsec'>样例输出</div><div class='pddata'>-25000=7FB8(base-16)</div>\n","files":"","gpid":"A1124","indatacount":0,"inputfile":"","langs":"CPP,C0X,VC9,C,JAVA,PAS,PYTHON","memorylimit":"256.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"NOIP2000 提高组","subinter":0,"timelimit":"1.0s","title":"进制转换","type":"DEFAULT"}