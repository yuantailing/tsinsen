{"code":"","content":"<div>问题描述</div>\n<div>回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。</div>\n<div>&nbsp;</div>\n<div>输入格式</div>\n<div>输入第一行是两个不超过200的正整数m, n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。</div>\n<div>&nbsp;</div>\n<div>输出格式</div>\n<div>输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。</div>\n<div>&nbsp;</div>\n<div>样例输入</div>\n<div>3 3</div>\n<div>1 2 3</div>\n<div>4 5 6</div>\n<div>7 8 9</div>\n<div>&nbsp;</div>\n<div>样例输出</div>\n<div>1 4 7 8 9 6 3 2 5</div>\n<div>&nbsp;</div>\n<div>样例输入</div>\n<div>3 2</div>\n<div>1 2</div>\n<div>3 4</div>\n<div>5 6</div>\n<div>&nbsp;</div>\n<div>样例输出</div>\n<div>1 3 5 6 4 2</div>\n<div>&nbsp;</div>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　回形取数就是沿矩阵的边取数，若当前方向上无数可取或已经取过，则左转90度。一开始位于矩阵左上角，方向向下。</div><div class='pdsec'>输入格式</div><div class='pdcont'>　　输入第一行是两个不超过200的正整数m, n，表示矩阵的行和列。接下来m行每行n个整数，表示这个矩阵。</div><div class='pdsec'>输出格式</div><div class='pdcont'>　　输出只有一行，共mn个数，为输入矩阵回形取数得到的结果。数之间用一个空格分隔，行末不要有多余的空格。</div><div class='pdsec'>样例输入</div><div class='pddata'>3 3<br />\n1 2 3<br />\n4 5 6<br />\n7 8 9</div><div class='pdsec'>样例输出</div><div class='pddata'>1 4 7 8 9 6 3 2 5</div><div class='pdsec'>样例输入</div><div class='pddata'>3 2<br />\n1 2<br />\n3 4<br />\n5 6</div><div class='pdsec'>样例输出</div><div class='pddata'>1 3 5 6 4 2</div>\n","files":"","gpid":"D6668","indatacount":0,"inputfile":"","langs":"CPP,C","memorylimit":"512.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"回形取数","type":"DEFAULT"}