{"code":"","content":"<p>﻿【﻿题目描述】</p>\n<p>实现一个时间类Time。将小时，分钟和秒存储为int型成员变量。要求该类中包含一个构造函数，访问用的函数，一个推进当前时间的函数adv()，一个重新设置当前时间（即将当前时间设为00:00:00）的函数reset()和输出结果函数print()。注意时间按数字式电子表格式显示，即小时、分、秒分别用两位表示，如果其中之一小于10，则前方补0，如22:01:00（中间不含空格），另外按该格式依次输出时、分、秒后，以endl结尾。当输入时间超出合法范围（提示：注意上下界）时，请自动按照24小时制进行转换，请务必注意时分秒为负值时的处理，如输入25:00:61，则输出应为01:01:01，输入-1:-1:-1，应该输出22:58:59。<br />\n第一步：依据题意定义Time类<br />\nclass Time<br />\n{<br />\n// 请补充<br />\n};<br />\n第二步：利用如下测试程序对所编写的Time类进行测试。<br />\nint main()<br />\n{<br />\n// 当前时间<br />\nint hour, minute, second;<br />\n// 时间增量<br />\nint incr_hr, incr_min, incr_sec;<br />\ncin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second &gt;&gt; incr_hr &gt;&gt; incr_min &gt;&gt; incr_sec;<br />\nTime t( hour, minute, second );<br />\nt.print();<br />\nt.adv( incr_hr, incr_min, incr_sec );<br />\nt.print();<br />\nt.reset();<br />\nt.print();<br />\nreturn 0;<br />\n}<br />\n输入格式</p>\n<p>输入一行，6个int类型数字，以空格间隔。</p>\n<p>输出格式</p>\n<p>输出三行时间，时间格式为24小时制，xx:xx:xx，英文标点，不足两位十位数补0。</p>\n<p>第一行为初始时间，第二行为adv()后的时间，第三行为reset()后的时间</p>\n<p>【示例1输入】<br />\n0 0 0 0 0 -1<br />\n<br />\n【示例1输出】<br />\n00:00:00<br />\n23:59:59<br />\n00:00:00<br />\n示例3：<br />\n<br />\n【示例2输入】<br />\n25 63 61 0 0 1<br />\n<br />\n【示例2输出】<br />\n02:04:01<br />\n02:04:02<br />\n00:00:00<br />\n<br />\n【示例3输入】<br />\n-50 -24 0 50 45 90<br />\n【示例3输出】<br />\n21:36:00<br />\n00:22:30<br />\n00:00:00<br />\n&nbsp;</p>","fcontent":"<div class='pdcont'>　　﻿【﻿题目描述】<br />\n　　实现一个时间类Time。将小时，分钟和秒存储为int型成员变量。要求该类中包含一个构造函数，访问用的函数，一个推进当前时间的函数adv()，一个重新设置当前时间（即将当前时间设为00:00:00）的函数reset()和输出结果函数print()。注意时间按数字式电子表格式显示，即小时、分、秒分别用两位表示，如果其中之一小于10，则前方补0，如22:01:00（中间不含空格），另外按该格式依次输出时、分、秒后，以endl结尾。当输入时间超出合法范围（提示：注意上下界）时，请自动按照24小时制进行转换，请务必注意时分秒为负值时的处理，如输入25:00:61，则输出应为01:01:01，输入-1:-1:-1，应该输出22:58:59。<br />\n　　第一步：依据题意定义Time类<br />\n　　class Time<br />\n　　{<br />\n　　// 请补充<br />\n　　};<br />\n　　第二步：利用如下测试程序对所编写的Time类进行测试。<br />\n　　int main()<br />\n　　{<br />\n　　// 当前时间<br />\n　　int hour, minute, second;<br />\n　　// 时间增量<br />\n　　int incr_hr, incr_min, incr_sec;<br />\n　　cin &gt;&gt; hour &gt;&gt; minute &gt;&gt; second &gt;&gt; incr_hr &gt;&gt; incr_min &gt;&gt; incr_sec;<br />\n　　Time t( hour, minute, second );<br />\n　　t.print();<br />\n　　t.adv( incr_hr, incr_min, incr_sec );<br />\n　　t.print();<br />\n　　t.reset();<br />\n　　t.print();<br />\n　　return 0;<br />\n　　}</div><div class='pdsec'>输入格式</div><div class='pdcont'>　　输入一行，6个int类型数字，以空格间隔。</div><div class='pdsec'>输出格式</div><div class='pdcont'>　　输出三行时间，时间格式为24小时制，xx:xx:xx，英文标点，不足两位十位数补0。<br />\n　　第一行为初始时间，第二行为adv()后的时间，第三行为reset()后的时间</div><div class='pdsec'>示例1输入</div><div class='pdcont'>　　0 0 0 0 0 -1</div><div class='pdsec'>示例1输出</div><div class='pdcont'>　　00:00:00<br />\n　　23:59:59<br />\n　　00:00:00<br />\n　　示例3：</div><div class='pdsec'>示例2输入</div><div class='pdcont'>　　25 63 61 0 0 1</div><div class='pdsec'>示例2输出</div><div class='pdcont'>　　02:04:01<br />\n　　02:04:02<br />\n　　00:00:00</div><div class='pdsec'>示例3输入</div><div class='pdcont'>　　-50 -24 0 50 45 90</div><div class='pdsec'>示例3输出</div><div class='pdcont'>　　21:36:00<br />\n　　00:22:30<br />\n　　00:00:00</div>\n","files":"","gpid":"D5809","indatacount":0,"inputfile":"","langs":"CPP","memorylimit":"256.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"c++_ch04_02_修正版","type":"DEFAULT"}