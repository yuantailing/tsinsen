{"code":"","content":"<p class=\"MsoNormal\"><span style=\"font-family: 宋体\">【问题描述】</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">我们可以把由&ldquo;</span><span lang=\"EN-US\">0</span><span style=\"font-family: 宋体\">&rdquo;和&ldquo;</span><span lang=\"EN-US\">1</span><span style=\"font-family: 宋体\">&rdquo;组成的字符串分为三类：全&ldquo;</span><span lang=\"EN-US\">0</span><span style=\"font-family: 宋体\">&rdquo;串称为</span><span lang=\"EN-US\">B</span><span style=\"font-family: 宋体\">串，全&ldquo;</span><span lang=\"EN-US\">1</span><span style=\"font-family: 宋体\">&rdquo;串称为</span><span lang=\"EN-US\">I</span><span style=\"font-family: 宋体\">串，既含&ldquo;</span><span lang=\"EN-US\">0</span><span style=\"font-family: 宋体\">&rdquo;又含&ldquo;</span><span lang=\"EN-US\">1</span><span style=\"font-family: 宋体\">&rdquo;的串则称为</span><span lang=\"EN-US\">F</span><span style=\"font-family: 宋体\">串。</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">FBI</span><span style=\"font-family: 宋体\">树是一种二叉树，它的结点类型也包括</span><span lang=\"EN-US\">F</span><span style=\"font-family: 宋体\">结点，</span><span lang=\"EN-US\">B</span><span style=\"font-family: 宋体\">结点和</span><span lang=\"EN-US\">I</span><span style=\"font-family: 宋体\">结点三种。由一个长度为</span><span lang=\"EN-US\">2<sup>N</sup></span><span style=\"font-family: 宋体\">的&ldquo;</span><span lang=\"EN-US\">01</span><span style=\"font-family: 宋体\">&rdquo;串</span><span lang=\"EN-US\">S</span><span style=\"font-family: 宋体\">可以构造出一棵</span><span lang=\"EN-US\">FBI</span><span style=\"font-family: 宋体\">树</span><span lang=\"EN-US\">T</span><span style=\"font-family: 宋体\">，递归的构造方法如下：</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;1)T</span><span style=\"font-family: 宋体\">的根结点为</span><span lang=\"EN-US\">R</span><span style=\"font-family: 宋体\">，其类型与串</span><span lang=\"EN-US\">S</span><span style=\"font-family: 宋体\">的类型相同；</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;2)</span><span style=\"font-family: 宋体\">若串</span><span lang=\"EN-US\">S</span><span style=\"font-family: 宋体\">的长度大于</span><span lang=\"EN-US\">1</span><span style=\"font-family: 宋体\">，将串</span><span lang=\"EN-US\">S</span><span style=\"font-family: 宋体\">从中间分开，分为等长的左右子串</span><span lang=\"EN-US\">S1</span><span style=\"font-family: 宋体\">和</span><span lang=\"EN-US\">S2</span><span style=\"font-family: 宋体\">；由左子串</span><span lang=\"EN-US\">S1</span><span style=\"font-family: 宋体\">构造</span><span lang=\"EN-US\">R</span><span style=\"font-family: 宋体\">的左子树</span><span lang=\"EN-US\">T1</span><span style=\"font-family: 宋体\">，由右子串</span><span lang=\"EN-US\">S2</span><span style=\"font-family: 宋体\">构造</span><span lang=\"EN-US\">R</span><span style=\"font-family: 宋体\">的右子树</span><span lang=\"EN-US\">T2</span><span style=\"font-family: 宋体\">。</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">现在给定一个长度为</span><span lang=\"EN-US\">2<sup>N</sup></span><span style=\"font-family: 宋体\">的&ldquo;</span><span lang=\"EN-US\">01</span><span style=\"font-family: 宋体\">&rdquo;串，请用上述构造方法构造出一棵</span><span lang=\"EN-US\">FBI</span><span style=\"font-family: 宋体\">树，并输出它的后序遍历</span><span style=\"font-family: 宋体\">序列。</span></p>\n<p class=\"MsoNormal\"><span style=\"font-family: 宋体\">【输入格式】</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">第一行是一个整数</span><span lang=\"EN-US\">N</span><span style=\"font-family: 宋体\">（</span><span lang=\"EN-US\">0  &lt;= N &lt;= 10</span><span style=\"font-family: 宋体\">），第二行是一个长度为</span><span lang=\"EN-US\">2<sup>N</sup></span><span style=\"font-family: 宋体\">的&ldquo;</span><span lang=\"EN-US\">01</span><span style=\"font-family: 宋体\">&rdquo;串。</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">【输出文件】</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">包括一行，这一行只包含一个字符串，即</span><span lang=\"EN-US\">FBI</span><span style=\"font-family: 宋体\">树的后序遍历序列。</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">【样例输入】</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">3</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">10001011</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">【样例输出】</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;IBFBBBFIBFIIIFF</span></p>\n<p class=\"MsoNormal\"><span style=\"font-family: 宋体\">【数据规模】</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-family: 宋体\">对于</span><span lang=\"EN-US\">40%</span><span style=\"font-family: 宋体\">的数据，</span><span lang=\"EN-US\">N  &lt;= 2</span><span style=\"font-family: 宋体\">；</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;</span><span style=\"font-size: 10.5pt; font-family: 宋体\">对于全部的数据，</span><span lang=\"EN-US\" style=\"font-size: 10.5pt; font-family: Times New Roman\">N  &lt;= 10</span><span style=\"font-size: 10.5pt; font-family: 宋体\">。</span></p>\n<p>注：</p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">&nbsp;[1] </span> <span style=\"font-family: 宋体\"> 二叉树：二叉树是结点的有限集合，这个集合或为空集，或由一个根结点和两棵不相交的二叉树组成。这两棵不相交的二叉树分别称为这个根结点的左子树和右子树。</span></p>\n<p class=\"MsoNormal\"><span lang=\"EN-US\">[2] </span> <span style=\"font-family: 宋体\"> 后序遍历：后序遍历是深度优先遍历二叉树的一种方法，它的递归定义是：先后序遍历左子树，再后序遍历右子树，最后访问根。</span></p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　我们可以把由“0”和“1”组成的字符串分为三类：全“0”串称为B串，全“1”串称为I串，既含“0”又含“1”的串则称为F串。<br />\n　　FBI树是一种二叉树，它的结点类型也包括F结点，B结点和I结点三种。由一个长度为2<sup>N</sup>的“01”串S可以构造出一棵FBI树T，递归的构造方法如下：<br />\n　　1)T的根结点为R，其类型与串S的类型相同；<br />\n　　2)若串S的长度大于1，将串S从中间分开，分为等长的左右子串S1和S2；由左子串S1构造R的左子树T1，由右子串S2构造R的右子树T2。<br />\n　　现在给定一个长度为2<sup>N</sup>的“01”串，请用上述构造方法构造出一棵FBI树，并输出它的后序遍历序列。</div><div class='pdsec'>输入格式</div><div class='pdcont'>　　第一行是一个整数N（0  &lt;= N &lt;= 10），第二行是一个长度为2<sup>N</sup>的“01”串。</div><div class='pdsec'>输出格式</div><div class='pdcont'>　　包括一行，这一行只包含一个字符串，即FBI树的后序遍历序列。</div><div class='pdsec'>样例输入</div><div class='pddata'>3<br />\n10001011</div><div class='pdsec'>样例输出</div><div class='pddata'>IBFBBBFIBFIIIFF</div><div class='pdsec'>数据规模和约定</div><div class='pdcont'>　　对于40%的数据，N  &lt;= 2；<br />\n　　对于全部的数据，N  &lt;= 10。<br />\n　　注：<br />\n　　[1]   二叉树：二叉树是结点的有限集合，这个集合或为空集，或由一个根结点和两棵不相交的二叉树组成。这两棵不相交的二叉树分别称为这个根结点的左子树和右子树。<br />\n　　[2]   后序遍历：后序遍历是深度优先遍历二叉树的一种方法，它的递归定义是：先后序遍历左子树，再后序遍历右子树，最后访问根。</div>\n","files":"","gpid":"D6977","indatacount":0,"inputfile":"","langs":"CPP,C","memorylimit":"256.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"NOIP2004 普及组","subinter":0,"timelimit":"1.0s","title":"FBI树","type":"DEFAULT"}