{"code":"#include <iostream>\nusing namespace std;\n\n\n@你的代码\n\nint main( int argc, char * argv[] )\n{\n    Width w, x;\n    cout << \"#objects = \" << w.numWidths() << endl;\n    {\n        Width w, x, y, z;\n        cout << \"#objects = \" << w.numWidths() << endl;\n    }\n    cout << \"#objects = \" << w.numWidths() << endl;\n    Width y;\n    cout << \"#objects = \" << w.numWidths() << endl;\n    return 0;\n}","content":"<p class=\"a\" style=\"margin: 6pt 0cm 3pt 21pt\">【问题描述】</p>\n<p class=\"a\" style=\"margin: 6pt 0cm 3pt 21pt\"><span lang=\"EN-US\" style=\"font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; mso-fareast-font-family: Calibri; mso-fareast-theme-font: minor-latin; mso-bidi-font-family: Calibri; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-latin\"><span style=\"mso-list: Ignore\"><span style=\"font: 7pt &quot;Times New Roman&quot;\">&nbsp;</span></span></span><font size=\"3\"><span style=\"mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\"><font face=\"宋体\">在上面设计的</font></span><span lang=\"EN-US\" style=\"font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi\">Width</span><span style=\"mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\"><font face=\"宋体\">类的基础上，将静态数据成员设计为私有数据，然后设计一个专门访问它的函数成员</font></span><span lang=\"EN-US\" style=\"font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi\">numWidths()</span><span style=\"mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\"><font face=\"宋体\">，用于返回当前的</font></span><span lang=\"EN-US\" style=\"font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi\">counts</span><font face=\"宋体\"><span style=\"mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\">数值。</span><span lang=\"EN-US\" style=\"font-family: &quot;Calibri&quot;,&quot;sans-serif&quot;; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-bidi-font-family: 'Times New Roman'; mso-bidi-font-size: 11.0pt; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-bidi-theme-font: minor-bidi\"><o:p></o:p></span></font></font></p>\n<p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt\"><span lang=\"EN-US\"><o:p><font face=\"Calibri\" size=\"3\">&nbsp;</font></o:p></span></p>\n<p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt\"><font size=\"3\"><span style=\"background: #d9d9d9; font-family: 宋体; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri; mso-shading: white; mso-pattern: gray-15 auto\">第一步</span><span style=\"font-family: 宋体; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\">：写出Width定义</span></font></p>\n<p class=\"MsoNormal\" style=\"background: #f2f2f2; margin: 0cm 0cm 0pt; mso-background-themecolor: background1; mso-background-themeshade: 242\"><span lang=\"EN-US\" style=\"font-size: 9pt; font-family: &quot;Courier New&quot;\"><span style=\"mso-tab-count: 1\">&nbsp;&nbsp;&nbsp;&nbsp;</span></span></p>\n<p class=\"MsoNormal\" style=\"margin: 0cm 0cm 0pt\"><font size=\"3\"><span style=\"background: #d9d9d9; font-family: 宋体; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri; mso-shading: white; mso-pattern: gray-15 auto\">第二步</span><span style=\"font-family: 宋体; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\">：使用下列测试函数对第一步中编写的</span><span lang=\"EN-US\"><font face=\"Calibri\">Width</font></span><span style=\"font-family: 宋体; mso-fareast-font-family: 宋体; mso-fareast-theme-font: minor-fareast; mso-ascii-theme-font: minor-latin; mso-hansi-theme-font: minor-latin; mso-ascii-font-family: Calibri; mso-hansi-font-family: Calibri\">类进行测试。</span></font></p>\n<p class=\"MsoNormal\" style=\"background: #f2f2f2; margin: 0cm 0cm 0pt; text-align: left; mso-layout-grid-align: none; mso-background-themecolor: background1; mso-background-themeshade: 242\" align=\"left\">&nbsp;</p>\n<p>&nbsp;</p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　在上面设计的Width类的基础上，将静态数据成员设计为私有数据，然后设计一个专门访问它的函数成员numWidths()，用于返回当前的counts数值。<br />\n<br />\n　　第一步：写出Width定义<br />\n<br />\n　　第二步：使用下列测试函数对第一步中编写的Width类进行测试。</div>\n","files":"","gpid":"D5676","indatacount":0,"inputfile":"","langs":"CPP","memorylimit":"100.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"c++_ch05_02","type":"DEFAULT"}