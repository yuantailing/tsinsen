{"code":"","content":"<p class=\"subtitle\">\n<p class=\"subtitle\">问题描述</p>\n<p class=\"subtitle\">回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。&nbsp;</p>\n<p class=\"subtitle\">交换的定义是：交换两个相邻的字符&nbsp;</p>\n<p class=\"subtitle\">例如mamad&nbsp;</p>\n<p class=\"subtitle\">第一次交换 ad : mamda&nbsp;</p>\n<p class=\"subtitle\">第二次交换 md : madma&nbsp;</p>\n<p class=\"subtitle\">第三次交换 ma : madam (回文！完美！)&nbsp;</p>\n<p class=\"subtitle\">&nbsp;</p>\n<p class=\"subtitle\">输入格式</p>\n<p class=\"subtitle\">第一行是一个整数N，表示接下来的字符串的长度(N &lt;= 8000)&nbsp;</p>\n<p class=\"subtitle\">第二行是一个字符串，长度为N.只包含小写字母&nbsp;</p>\n<p class=\"subtitle\">&nbsp;</p>\n<p class=\"subtitle\">输出格式</p>\n<p class=\"subtitle\">如果可能，输出最少的交换次数。&nbsp;</p>\n<p class=\"subtitle\">否则输出Impossible&nbsp;</p>\n<p class=\"subtitle\">&nbsp;</p>\n<p class=\"subtitle\">样例输入</p>\n<p class=\"subtitle\">5</p>\n<p class=\"subtitle\">mamad</p>\n<p class=\"subtitle\">&nbsp;</p>\n<p class=\"subtitle\">样例输出</p>\n<p class=\"subtitle\">3</p>\n<div>&nbsp;</div>\n</p>\n<p>&nbsp;</p>","fcontent":"<div class='pdsec'>问题描述</div><div class='pdcont'>　　回文串，是一种特殊的字符串，它从左往右读和从右往左读是一样的。小龙龙认为回文串才是完美的。现在给你一个串，它不一定是回文的，请你计算最少的交换次数使得该串变成一个完美的回文串。<br />\n　　交换的定义是：交换两个相邻的字符<br />\n　　例如mamad<br />\n　　第一次交换 ad : mamda<br />\n　　第二次交换 md : madma<br />\n　　第三次交换 ma : madam (回文！完美！)</div><div class='pdsec'>输入格式</div><div class='pdcont'>　　第一行是一个整数N，表示接下来的字符串的长度(N &lt;= 8000)<br />\n　　第二行是一个字符串，长度为N.只包含小写字母</div><div class='pdsec'>输出格式</div><div class='pdcont'>　　如果可能，输出最少的交换次数。<br />\n　　否则输出Impossible</div><div class='pdsec'>样例输入</div><div class='pddata'>5<br />\nmamad</div><div class='pdsec'>样例输出</div><div class='pddata'>3</div>\n","files":"","gpid":"A1043","indatacount":0,"inputfile":"","langs":"CPP,C0X,VC9,C,JAVA,PAS,PYTHON","memorylimit":"512.0MB","opid":0,"outputfile":"","remain":0,"ret":1,"specialjudge":"","src":"","subinter":0,"timelimit":"1.0s","title":"完美的代价","type":"DEFAULT"}